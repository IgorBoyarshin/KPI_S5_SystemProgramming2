% Allowed sequences

TYPED_ID_LIST ->
    , )

TYPED_ID ->
    , ; ( )

void ->
    ID

bool ->
    ID *

int ->
    ID *

float ->
    ID *

ID_VOID ->
    (

ID_BOOL ->
    = (

ID_INT ->
    = (

ID_FLOAT ->
    = (

ID_POINTER_BOOL ->
    = ( [

ID_POINTER_INT ->
    = ( [

ID_POINTER_FLOAT ->
    = ( [

DECLARATION_LIST ->
    DECLARATION

DECLARATION ->
    DECLARATION

STATEMENT_LIST ->
    STATEMENT }

STATEMENT ->
    STATEMENT else }

EXPRESSION_LIST ->
    , )

EXPRESSION_BOOL ->
    ; ) , == != ]

EXPRESSION_INT ->
    ; ) , == != < <= > >= * / + - ]

EXPRESSION_FLOAT ->
    ; ) , == != < <= > >= * / + - ]

EXPRESSION_POINTER_BOOL ->
    ; ) , + - == !=

EXPRESSION_POINTER_INT ->
    ; ) , + - == !=

EXPRESSION_POINTER_FLOAT ->
    ; ) , + - == !=

FUNCTION_CALL_VOID ->
    ;

{ ->
    } STATEMENT STATEMENT_LIST

( ->
    ) TYPED_ID TYPED_ID_LIST EXPRESSION_BOOL EXPRESSION_INT EXPRESSION_FLOAT EXPRESSION_LIST

) ->
    BLOCK STATEMENT

[ ->
    EXPRESSION_INT

= ->
    EXPRESSION_BOOL EXPRESSION_INT EXPRESSION_FLOAT

== ->
    EXPRESSION_BOOL EXPRESSION_INT EXPRESSION_FLOAT

!= ->
    EXPRESSION_BOOL EXPRESSION_INT EXPRESSION_FLOAT

< ->
    EXPRESSION_INT EXPRESSION_FLOAT

<= ->
    EXPRESSION_INT EXPRESSION_FLOAT

> ->
    EXPRESSION_INT EXPRESSION_FLOAT

>= ->
    EXPRESSION_INT EXPRESSION_FLOAT

+ ->
    EXPRESSION_INT EXPRESSION_FLOAT EXPRESSION_POINTER_POINT

- ->
    EXPRESSION_INT EXPRESSION_FLOAT EXPRESSION_POINTER_POINT

* ->
    EXPRESSION_INT EXPRESSION_FLOAT

/ ->
    EXPRESSION_INT EXPRESSION_FLOAT




